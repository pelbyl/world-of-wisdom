// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountDifficultyAdjustments(ctx context.Context, db DBTX) (int64, error)
	CountLogsByLevel(ctx context.Context, db DBTX) ([]CountLogsByLevelRow, error)
	CreateBlock(ctx context.Context, db DBTX, arg CreateBlockParams) (Block, error)
	CreateChallenge(ctx context.Context, db DBTX, arg CreateChallengeParams) (Challenge, error)
	CreateConnection(ctx context.Context, db DBTX, arg CreateConnectionParams) (Connection, error)
	CreateLog(ctx context.Context, db DBTX, arg CreateLogParams) (Log, error)
	CreateSolution(ctx context.Context, db DBTX, arg CreateSolutionParams) (Solution, error)
	DeleteOldLogs(ctx context.Context, db DBTX) error
	GetActiveConnections(ctx context.Context, db DBTX) ([]Connection, error)
	GetBlock(ctx context.Context, db DBTX, id int32) (Block, error)
	GetBlockByIndex(ctx context.Context, db DBTX, blockIndex int32) (Block, error)
	GetBlockchain(ctx context.Context, db DBTX) ([]GetBlockchainRow, error)
	GetChallenge(ctx context.Context, db DBTX, id pgtype.UUID) (Challenge, error)
	GetChallengeByClientID(ctx context.Context, db DBTX, clientID string) (Challenge, error)
	GetChallengesByAlgorithm(ctx context.Context, db DBTX, algorithm PowAlgorithm) ([]Challenge, error)
	GetChallengesByDifficulty(ctx context.Context, db DBTX, difficulty int32) ([]Challenge, error)
	GetConnection(ctx context.Context, db DBTX, id pgtype.UUID) (Connection, error)
	GetConnectionByClientID(ctx context.Context, db DBTX, clientID string) (Connection, error)
	GetConnectionStats(ctx context.Context, db DBTX) (GetConnectionStatsRow, error)
	GetLatestBlock(ctx context.Context, db DBTX) (Block, error)
	GetLogsByLevel(ctx context.Context, db DBTX, arg GetLogsByLevelParams) ([]Log, error)
	GetLogsInTimeRange(ctx context.Context, db DBTX, arg GetLogsInTimeRangeParams) ([]Log, error)
	GetLogsPaginated(ctx context.Context, db DBTX, arg GetLogsPaginatedParams) ([]Log, error)
	GetMetricHistory(ctx context.Context, db DBTX, metricName string) ([]GetMetricHistoryRow, error)
	GetMetricsByName(ctx context.Context, db DBTX, arg GetMetricsByNameParams) ([]Metric, error)
	GetRecentBlocks(ctx context.Context, db DBTX, limit int32) ([]GetRecentBlocksRow, error)
	GetRecentChallenges(ctx context.Context, db DBTX, limit int32) ([]Challenge, error)
	GetRecentConnections(ctx context.Context, db DBTX, limit int32) ([]Connection, error)
	GetRecentLogs(ctx context.Context, db DBTX, limit int32) ([]Log, error)
	GetRecentMetrics(ctx context.Context, db DBTX) ([]GetRecentMetricsRow, error)
	GetRecentSolutions(ctx context.Context, db DBTX, limit int32) ([]GetRecentSolutionsRow, error)
	GetSolution(ctx context.Context, db DBTX, id pgtype.UUID) (Solution, error)
	GetSolutionStats(ctx context.Context, db DBTX) (GetSolutionStatsRow, error)
	GetSolutionsByChallenge(ctx context.Context, db DBTX, challengeID pgtype.UUID) ([]Solution, error)
	GetSystemMetrics(ctx context.Context, db DBTX) ([]GetSystemMetricsRow, error)
	RecordMetric(ctx context.Context, db DBTX, arg RecordMetricParams) error
	UpdateChallengeStatus(ctx context.Context, db DBTX, arg UpdateChallengeStatusParams) (Challenge, error)
	UpdateConnectionStats(ctx context.Context, db DBTX, arg UpdateConnectionStatsParams) (Connection, error)
	UpdateConnectionStatus(ctx context.Context, db DBTX, arg UpdateConnectionStatusParams) (Connection, error)
	VerifySolution(ctx context.Context, db DBTX, arg VerifySolutionParams) (Solution, error)
}

var _ Querier = (*Queries)(nil)
